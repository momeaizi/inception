volumes:
  wp_vol:
  db_vol:

networks:
  my_network:

services:
  nginx:
    container_name: nginx
    build: ./requirements/nginx
    ports:
      - 443:443
    restart: on-failure
    depends_on:
      - wordpress
    volumes:
      - wp_vol:/var/www/html
    networks:
      - my_network


  wordpress:
    container_name: wordpress
    env_file:
      - .env
    build: ./requirements/wordpress
    restart: on-failure
    depends_on:
      - mariadb
      - redis
    volumes:
      - wp_vol:/var/www/html
    networks:
      - my_network



  mariadb:
    container_name: mariadb
    env_file:
      - .env
    build: ./requirements/mariadb
    restart: on-failure
    volumes:
      - db_vol:/var/lib/mysql
    networks:
      - my_network

    
  adminer:
    container_name: adminer
    build: ./requirements/bonus/Adminer
    ports:
      - 8080:8080
    restart: on-failure
    depends_on:
      - mariadb
    volumes:
      - wp_vol:/ftp
    networks:
      - my_network
  
  ftp:
    container_name: ftp
    build: ./requirements/bonus/ftp
    env_file:
      - .env
    ports:
      - 20:20
      - 21:21
      - 5000-5010:5000-5010

    restart: on-failure
    depends_on:
      - wordpress
    volumes:
      - wp_vol:/var/www/html
    networks:
      - my_network


  redis:
    container_name: redis
    build: ./requirements/bonus/redis
    restart: on-failure
    volumes:
      - db_vol:/var/lib/redis
    networks:
      - my_network

  containerization:
    container_name: containerization
    build: ./requirements/bonus/containerization
    ports:
      - 3000:3000
    restart: on-failure
    networks:
      - my_network


  portainer:
    container_name: portainer
    build: ./requirements/bonus/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9000:9000
    restart: on-failure
    networks:
      - my_network
